version: '3.4'

services:
  usermicroservice:
    image: ${DOCKER_REGISTRY-}usermicroservice
    build:
      context: .
      dockerfile: UserMicroservice/Dockerfile
    networks:
      - my-network
    depends_on:
      - db

  raportsmicroservice:
    image: ${DOCKER_REGISTRY-}raportsmicroservice
    build:
      context: .
      dockerfile: RaportsMicroservice/Dockerfile
    networks:
      - my-network
    depends_on:
      - db


  jobmicroservice:
    image: ${DOCKER_REGISTRY-}jobmicroservice
    build:
      context: .
      dockerfile: JobMicroservice/Dockerfile
    networks:
      - my-network
    depends_on:
      - db


  inboxmicroservice:
    image: ${DOCKER_REGISTRY-}inboxmicroservice
    build:
      context: .
      dockerfile: InboxMicroservice/Dockerfile
    networks:
      - my-network
    depends_on:
      - db


  catsgrpcmicroservice:
    image: ${DOCKER_REGISTRY-}catsgrpcmicroservice
    build:
      context: .
      dockerfile: CatsGrpcMicroservice/Dockerfile
    networks:
      - my-network
    depends_on:
      - db


  catsapimicroservice:
    image: ${DOCKER_REGISTRY-}catsapimicroservice
    build:
      context: .
      dockerfile: CatsApiMicroservice/Dockerfile
    networks:
      - my-network
    depends_on:
      - db


  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    networks:
      - my-network
    depends_on:
      - db

  db:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    ports:
      - "1433:1433"
    environment:
      MSSQL_SA_PASSWORD: "S3cur3P@ssW0rd!"
      ACCEPT_EULA: "Y"
    networks:
      - my-network

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - my-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmqdata:/var/log/rabbitmq
    hostname: "rabbitmq"
    networks:
        - my-network

volumes:
  rabbitmqdata:

networks:
  my-network:
    external: true

