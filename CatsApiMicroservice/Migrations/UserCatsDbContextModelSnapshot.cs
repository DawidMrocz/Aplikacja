// <auto-generated />
using CatsApiMicroservice.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatsApiMicroservice.Migrations
{
    [DbContext(typeof(UserCatsDbContext))]
    partial class UserCatsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CatsApiMicroservice.Entities.Cat", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatId"));

                    b.Property<string>("CatCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("CatId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.CatRecord", b =>
                {
                    b.Property<int>("CatRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatRecordId"));

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<int>("InboxItemId")
                        .HasColumnType("int");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SapText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatRecordId");

                    b.HasIndex("CatId");

                    b.ToTable("CatRecords");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.CatRecordHours", b =>
                {
                    b.Property<int>("CatRecordHoursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatRecordHoursId"));

                    b.Property<int>("CatRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.HasKey("CatRecordHoursId");

                    b.HasIndex("CatRecordId");

                    b.ToTable("CatRecordHourss");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("ActTyp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCtr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.Cat", b =>
                {
                    b.HasOne("CatsApiMicroservice.Entities.Employee", "Employee")
                        .WithMany("Cats")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.CatRecord", b =>
                {
                    b.HasOne("CatsApiMicroservice.Entities.Cat", "Cat")
                        .WithMany("CatRecords")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.CatRecordHours", b =>
                {
                    b.HasOne("CatsApiMicroservice.Entities.CatRecord", "CatsRecord")
                        .WithMany("CatRecordHours")
                        .HasForeignKey("CatRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatsRecord");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.Cat", b =>
                {
                    b.Navigation("CatRecords");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.CatRecord", b =>
                {
                    b.Navigation("CatRecordHours");
                });

            modelBuilder.Entity("CatsApiMicroservice.Entities.Employee", b =>
                {
                    b.Navigation("Cats");
                });
#pragma warning restore 612, 618
        }
    }
}
