// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RaportMicroservice.Models;

#nullable disable

namespace RaportsMicroservice.Migrations
{
    [DbContext(typeof(RaportDbContext))]
    partial class RaportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RaportsMicroservice.Entities.Raport", b =>
                {
                    b.Property<int>("RaportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaportId"));

                    b.Property<string>("Created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalHours")
                        .HasColumnType("float");

                    b.HasKey("RaportId");

                    b.ToTable("Raports");
                });

            modelBuilder.Entity("RaportsMicroservice.Entities.UserRaport", b =>
                {
                    b.Property<int>("UserRaportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRaportId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaportId")
                        .HasColumnType("int");

                    b.Property<double>("UserAllHours")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRaportId");

                    b.HasIndex("RaportId");

                    b.ToTable("UserRaports");
                });

            modelBuilder.Entity("RaportsMicroservice.Entities.UserRaportRecord", b =>
                {
                    b.Property<int>("UserRaportRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRaportRecordId"));

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Components")
                        .HasColumnType("int");

                    b.Property<int>("DrawingsOfAssemblies")
                        .HasColumnType("int");

                    b.Property<int>("DrawingsOfComponents")
                        .HasColumnType("int");

                    b.Property<string>("DueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ecm")
                        .HasColumnType("int");

                    b.Property<string>("Finished")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gpdm")
                        .HasColumnType("int");

                    b.Property<int>("InboxItemId")
                        .HasColumnType("int");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Started")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaskHours")
                        .HasColumnType("float");

                    b.Property<int>("UserRaportId")
                        .HasColumnType("int");

                    b.HasKey("UserRaportRecordId");

                    b.HasIndex("UserRaportId");

                    b.ToTable("UserRaportRecords");
                });

            modelBuilder.Entity("RaportsMicroservice.Entities.UserRaport", b =>
                {
                    b.HasOne("RaportsMicroservice.Entities.Raport", "Raport")
                        .WithMany("UserRaports")
                        .HasForeignKey("RaportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raport");
                });

            modelBuilder.Entity("RaportsMicroservice.Entities.UserRaportRecord", b =>
                {
                    b.HasOne("RaportsMicroservice.Entities.UserRaport", "UserRaport")
                        .WithMany("UserRaportRecords")
                        .HasForeignKey("UserRaportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRaport");
                });

            modelBuilder.Entity("RaportsMicroservice.Entities.Raport", b =>
                {
                    b.Navigation("UserRaports");
                });

            modelBuilder.Entity("RaportsMicroservice.Entities.UserRaport", b =>
                {
                    b.Navigation("UserRaportRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
